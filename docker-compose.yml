version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: auth_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql://root:rootpassword@db:3306/auth_db
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - CORS_ORIGINS=http://31.220.98.150:8080,http://31.220.98.150
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ./data:/app/data
      - processed_files:/app/data/processed_files
    depends_on:
      - db
    networks:
      - auth_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=http://31.220.98.150:8080/api
    container_name: auth_frontend
    ports:
      - "8080:80"
    environment:
      - VITE_API_BASE_URL=http://31.220.98.150:8080/api
    depends_on:
      - backend
    networks:
      - auth_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db:
    image: mysql:8.0
    container_name: auth_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=auth_db
      - MYSQL_USER=auth_user
      - MYSQL_PASSWORD=auth_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./data/db:/docker-entrypoint-initdb.d
    ports:
      - "3308:3306"
    networks:
      - auth_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  mysql_data:
    driver: local
  processed_files:
    driver: local

networks:
  auth_network:
    driver: bridge